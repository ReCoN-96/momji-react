// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render IntervenantForm correctly with intervenant data 1`] = `
<Box
  border="1px"
  borderColor="gray.200"
  borderRadius="40px"
  p={6}
  w="50%"
>
  <form
    onSubmit={[Function]}
  >
    <FormControl>
      <FormLabel>
        First name
      </FormLabel>
      <Input
        defaultValue="Jodie"
        mb={2}
        name="profile.firstName"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Last name
      </FormLabel>
      <Input
        defaultValue="Copeland"
        mb={2}
        name="profile.lastName"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Email address
      </FormLabel>
      <Input
        defaultValue="jodie.copeland@gmail.com"
        mb={2}
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        type="email"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Home Address
      </FormLabel>
      <Input
        defaultValue="930 Lewis Avenue, Bonanza, Idaho, 7682"
        mb={2}
        name="address"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Are you active ?
      </FormLabel>
      <Component
        control={
          Object {
            "controllerSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "defaultValuesRef": Object {
              "current": Object {
                "address": "930 Lewis Avenue, Bonanza, Idaho, 7682",
                "email": "jodie.copeland@gmail.com",
                "isActive": true,
                "profile.firstName": "Jodie",
                "profile.lastName": "Copeland",
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArraySubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "fieldsRef": Object {
              "current": Object {
                "address": Object {
                  "_f": Object {
                    "mount": true,
                    "name": "address",
                    "ref": Object {
                      "name": "address",
                      "value": "930 Lewis Avenue, Bonanza, Idaho, 7682",
                    },
                    "required": true,
                    "value": "930 Lewis Avenue, Bonanza, Idaho, 7682",
                  },
                },
                "email": Object {
                  "_f": Object {
                    "mount": true,
                    "name": "email",
                    "ref": Object {
                      "name": "email",
                      "value": "jodie.copeland@gmail.com",
                    },
                    "required": true,
                    "value": "jodie.copeland@gmail.com",
                  },
                },
                "profile": Object {
                  "firstName": Object {
                    "_f": Object {
                      "mount": true,
                      "name": "profile.firstName",
                      "ref": Object {
                        "name": "profile.firstName",
                        "value": "Jodie",
                      },
                      "required": true,
                      "value": "Jodie",
                    },
                  },
                  "lastName": Object {
                    "_f": Object {
                      "mount": true,
                      "name": "profile.lastName",
                      "ref": Object {
                        "name": "profile.lastName",
                        "value": "Copeland",
                      },
                      "required": true,
                      "value": "Copeland",
                    },
                  },
                },
              },
            },
            "fieldsWithValidationRef": Object {
              "current": Object {
                "address": true,
                "email": true,
                "profile": Object {
                  "firstName": true,
                  "lastName": true,
                },
              },
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": false,
                "isValidating": false,
                "submitCount": 0,
                "touchedFields": Object {},
              },
            },
            "formStateSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "getIsDirty": [Function],
            "inFieldArrayActionRef": Object {
              "current": false,
            },
            "isWatchAllRef": Object {
              "current": false,
            },
            "readFormStateRef": Object {
              "current": Object {
                "dirtyFields": false,
                "errors": false,
                "isDirty": false,
                "isValid": false,
                "isValidating": false,
                "touchedFields": false,
              },
            },
            "register": [Function],
            "shouldUnmount": undefined,
            "unregister": [Function],
            "validFieldsRef": Object {
              "current": Object {},
            },
            "watchFieldsRef": Object {
              "current": Set {},
            },
            "watchInternal": [Function],
            "watchSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
          }
        }
        defaultValue={true}
        name="isActive"
        render={[Function]}
      />
    </FormControl>
    <Box
      display="flex"
      justifyContent="flex-end"
    >
      <Button
        colorScheme="blue"
        type="submit"
      >
        Save
      </Button>
    </Box>
  </form>
</Box>
`;

exports[`should render IntervenantForm correctly 1`] = `
<Box
  border="1px"
  borderColor="gray.200"
  borderRadius="40px"
  p={6}
  w="50%"
>
  <form
    onSubmit={[Function]}
  >
    <FormControl>
      <FormLabel>
        First name
      </FormLabel>
      <Input
        defaultValue=""
        mb={2}
        name="profile.firstName"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Last name
      </FormLabel>
      <Input
        defaultValue=""
        mb={2}
        name="profile.lastName"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Email address
      </FormLabel>
      <Input
        defaultValue=""
        mb={2}
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        type="email"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Home Address
      </FormLabel>
      <Input
        defaultValue=""
        mb={2}
        name="address"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
      />
    </FormControl>
    <FormControl>
      <FormLabel>
        Are you active ?
      </FormLabel>
      <Component
        control={
          Object {
            "controllerSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "defaultValuesRef": Object {
              "current": Object {
                "address": "",
                "email": "",
                "isActive": false,
                "profile.firstName": "",
                "profile.lastName": "",
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArraySubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "fieldsRef": Object {
              "current": Object {
                "address": Object {
                  "_f": Object {
                    "mount": true,
                    "name": "address",
                    "ref": Object {
                      "name": "address",
                      "value": "",
                    },
                    "required": true,
                    "value": "",
                  },
                },
                "email": Object {
                  "_f": Object {
                    "mount": true,
                    "name": "email",
                    "ref": Object {
                      "name": "email",
                      "value": "",
                    },
                    "required": true,
                    "value": "",
                  },
                },
                "profile": Object {
                  "firstName": Object {
                    "_f": Object {
                      "mount": true,
                      "name": "profile.firstName",
                      "ref": Object {
                        "name": "profile.firstName",
                        "value": "",
                      },
                      "required": true,
                      "value": "",
                    },
                  },
                  "lastName": Object {
                    "_f": Object {
                      "mount": true,
                      "name": "profile.lastName",
                      "ref": Object {
                        "name": "profile.lastName",
                        "value": "",
                      },
                      "required": true,
                      "value": "",
                    },
                  },
                },
              },
            },
            "fieldsWithValidationRef": Object {
              "current": Object {
                "address": true,
                "email": true,
                "profile": Object {
                  "firstName": true,
                  "lastName": true,
                },
              },
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": false,
                "isValidating": false,
                "submitCount": 0,
                "touchedFields": Object {},
              },
            },
            "formStateSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
            "getIsDirty": [Function],
            "inFieldArrayActionRef": Object {
              "current": false,
            },
            "isWatchAllRef": Object {
              "current": false,
            },
            "readFormStateRef": Object {
              "current": Object {
                "dirtyFields": false,
                "errors": false,
                "isDirty": false,
                "isValid": false,
                "isValidating": false,
                "touchedFields": false,
              },
            },
            "register": [Function],
            "shouldUnmount": undefined,
            "unregister": [Function],
            "validFieldsRef": Object {
              "current": Object {},
            },
            "watchFieldsRef": Object {
              "current": Set {},
            },
            "watchInternal": [Function],
            "watchSubjectRef": Object {
              "current": Re {
                "observers": Array [],
              },
            },
          }
        }
        defaultValue={false}
        name="isActive"
        render={[Function]}
      />
    </FormControl>
    <Box
      display="flex"
      justifyContent="flex-end"
    >
      <Button
        colorScheme="blue"
        type="submit"
      >
        Save
      </Button>
    </Box>
  </form>
</Box>
`;
